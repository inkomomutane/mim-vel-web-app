name: ðŸ¦…ðŸš€ðŸ”¥ Deploy ðŸ”¥ðŸš€ðŸ¦…
on:
  push:
    branches:
      - main
jobs:
  buildAssets:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv
          coverage: none
      - name: Run composer install
        run: composer install -n --prefer-dist
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Install dependencies
        uses: bahmutov/npm-install@v1
      - name: Build project
        run: npm run build

      - name: Upload production-ready build files
        uses: actions/upload-artifact@v3
        with:
          name: mimovel-production-files
          path: ./public/build
      - name: Upload Build to FTP SERVER Mimovel
        uses: SamKirkland/FTP-Deploy-Action@4.3.0
        with:
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          local-dir: ./public/build/
          server-dir: ./build/
  deployAssets:
    name: Deploy
    needs: buildAssets
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: mimovel-production-files
          path: ./public/build
  buildApp:
    name: Build app to server
    needs: deployAssets
    runs-on: ubuntu-latest
    steps:
      - name: install dependeces via composer
        uses: fifsky/ssh-action@master
        with:
          command: |
            cd mimovel
            ${{ secrets.FUN_GIT_PULL }}
            php composer.phar install --optimize-autoloader --no-dev
            php artisan migrate --force
            php artisan optimize:clear
            php artisan config:cache
            php artisan route:cache
            php artisan view:cache
          host: ${{ secrets.SSH_SERVER }}
          user: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          #pass: ${{ secrets.SSH_PASS_KEY }}
          args: "-tt -vvv"
